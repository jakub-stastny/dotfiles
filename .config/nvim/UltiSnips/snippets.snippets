priority -50

global !p
import sys, os, re

sys.path.append(os.path.join(os.getenv('HOME'), '.config/nvim/UltiSnips/helpers'))

from complete import complete
endglobal

# Main.
snippet template "Snippet file template" b
global !p
import sys, os

sys.path.append(os.path.join(os.getenv('HOME'), '.config/nvim/UltiSnips/helpers'))

from complete import complete
endglobal

# Main.
snippet template "$1 file template" b
	$2
`!p snip.rv = "endsnippet"`
endsnippet

# We use a little hack so that the snippet is expanded and parsed correctly.
# TODO: Here it'd be great to show help for the options (something like
# the complete function), but delete the text after jump.
snippet s "Snippet definition." b
`!p snip.rv = "snippet"` ${1:Tab trigger} "${2:Label}" ${3:b}
$0
`!p snip.rv = "endsnippet"`
endsnippet

snippet g "Global snippet" b
`!p snip.rv = "global"` !p
$0
`!p snip.rv = "endglobal"`
endsnippet

# TODO: the completion doesn't work.
# TODO: complete dynamically.
snippet h "Import helpers" b
# Helpers
`echo global` !p
import sys, os

sys.path.append(os.path.join(os.getenv('HOME'), '.config/nvim/UltiSnips/helpers'))

from complete import $1`!p complete(t[1], ['complete', 'fileNameAsConstant'])`
endglobal
endsnippet
