# Main.
snippet template "HTML file template" b
<!DOCTYPE html>
<html>
	</head>
		<title>$1</title>
	</head>

	</body>
	</body>
</html>
endsnippet

# Using Emmet is another option.

snippet "^!" "HTML 5 doctype." r
<!DOCTYPE html>

endsnippet

# NOTE: 13/05/2018 now overriden by the definition of <div id>.
# snippet # "HTML comment."
# <!-- $1 -->$0
# endsnippet

snippet t "HTML tag block." b
<${1:div}>
  ${2:${VISUAL:text}}
</${1/(\w+).*/$1/}>$0
endsnippet

# FIXME: 13/05/2018 This is broken in the visual mode (unlike the above one).
snippet t. "HTML tag (in-line)."
<${1:em}>${2:${VISUAL:text}}</${1/(\w+).*/$1/}>$0
endsnippet

snippet a "Tag <a href>."
<a href="$1">$2</a>$0
endsnippet

snippet b "Tag <strong>."
<strong>$1</strong>$0
endsnippet

snippet em "Tag <em>."
<em>$1</em>$0
endsnippet

snippet p "Tag <p>." b
<p>
  $1
</p>$0
endsnippet

snippet # "Tag <div id>." b
<${1:div} id="$2">
  $3
</${1/(\w+).*/$1/}>$0
endsnippet

snippet . "Tag <div class>." b
<${1:div} class="$2">
  $3
</${1/(\w+).*/$1/}>$0
endsnippet

# FIXME: 13/05/2018 Python code eval doesn't work.
# TODO: 13/05/2018 Make 1 snippet with a list of tag for inline, one for block, then redefine ones with attrs like a[href].
snippet "\b(taga|tagb|tagc)" "Universal tag definition." r
<`p snip.rv = match.group(1)`>
  $1
<`p snip.rv = match.group(1)`>$0
endsnippet
