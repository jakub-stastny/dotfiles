priority 1

global !p
import sys, os, re

sys.path.append(os.path.join(os.getenv('HOME'), '.config/nvim/UltiSnips/helpers'))

from complete import fileNameAsConstant
endglobal

# Main.
snippet template "rSpec file template" b
require "spec_helper"

describe `!p fileNameAsConstant(snip, re.sub(r"_spec$", "", snip.basename))` do
	$1
end
endsnippet

# NOTE: 05/06/2018 Rewrites def.
# TODO: 05/06/2018 Change def to be expanded on either d, de, def.
snippet d "describe ..." b
describe ${1} do$2
end$0
endsnippet

# NOTE: 05/06/2018 Rewrites class.
snippet c "context ..." b
context ${1} do$2
end$0
endsnippet

snippet i "it ..." b
it "${1}" do$2
end$0
endsnippet

# NOTE: 05/06/2018 Sometimes we want just it "something" OR it has_done(:something) without any block.
snippet 'it ' "it ..." rbA
it "${1}" do$2
end$0
endsnippet

snippet xit "it ..." b
it "${1}"
endsnippet

snippet b4 "before ..." b
before(${1::each}) do$2
end$0
endsnippet

snippet e "rSpec expect" b
expect($1).${2:not_}to ${3:eql}($4)$0
endsnippet

snippet dc "described_class" b
described_class
endsnippet
