#!/usr/bin/env ruby

# Do 20 days each, then move on to the next one.

require 'yaml'
require 'timeout'
require 'refined-refinements/colours'
require 'refined-refinements/homepath'

using RR::ColouredTerminal

PATH = RR::Homepath.new('~/Dropbox/Data/Data/LifeFlow.yml')

data = begin
  YAML.load_file(PATH.expand)
rescue Errno::ENOENT
  Hash.new { |hash, key| hash[key] = Array.new }
end

def base_dir
  File.expand_path("~/Dropbox/Media/Meditation/Lifeflow")
end

def recordings
  Dir.glob("#{base_dir}/*.mp3")[1..-1].map(&File.method(:basename))
end

def find_recording(data, index = 0)
  recording = recordings[index]
  unless data[recording].length >= 20
    recording
  else
    find_recording(data, index + 1)
  end
end

def timeout_maybe(timeout, &block)
  timeout ? Timeout.timeout(timeout * 60, &block) : block.call
end

def play(path)
  path = RR::Homepath.new(path)
  puts "<bold>~</bold> <green>Playing</green> #{path}"
  timeout_maybe(ARGV.first && ARGV.shift.to_i) do
    system("afplay '#{path.expand}'")
  end
rescue Timeout::Error
  system("killall afplay") # Why doesn't it stop by itself?!?!
end

case ARGV.shift
when 'play'
  recording = find_recording(data)
  play(File.join(base_dir, recording))

  data[recording] << Time.now
  data_string = data.to_yaml
  File.open(PATH.expand, 'w') do |file|
    file.puts(data_string)
  end
else
  abort DATA.read
end


__END__
lifeflow play    <bright_black># Play the whole current episode.</bright_black>
lifeflow play <yellow>25</yellow> <bright_black># Play the current episode for 25 minutes.</bright_black>
