#!/usr/bin/env bb

(def home (System/getenv "HOME"))
(def desktop-path (str/join "/" [home "Desktop"]))
(def downloads-path (str/join "/" [home "Downloads"]))
(def wip-directory (str/join "/" [home "Documents" "WIP"]))

(def date-format (new java.text.SimpleDateFormat "yyyy-MM-dd.hh-mm"))
(def today (.format date-format (java.util.Date.)))

(defn create-temp-directory []
  (let [temp-directory today]
    (fs/create-dir (str/join "/" [wip-directory temp-directory]))))

(defn move [file target-dir]
  (try (fs/move file target-dir)
       (catch java.nio.file.FileAlreadyExistsException e
         (println "! Skipping file " file))))

(defn move-to-dir [files path]
  (println (str "~ Moving " (count files) " files to " path "."))
  (doseq [file files] (move file path)))

(defn move-files-from [path]
  (let [files (fs/glob path "*")]
    (cond
      (= 0 (count files)) (println (str "~ No files found in" path "."))
      (> 3 (count files)) (move-to-dir files wip-directory)
      :else (move-to-dir files (create-temp-directory)))))

(doseq [path [desktop-path downloads-path]] (move-files-from path))
