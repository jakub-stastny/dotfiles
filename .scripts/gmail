#!/usr/bin/env ruby

# TODO:
# Show always if there are pending confirmations.
# Group newsletters into a submenu and provide an unsubscribe link.

require 'yaml'

begin
  require 'gmail'
rescue LoadError
  abort 'Please run (sudo) gem install gmail.'
end

begin
  config = YAML.load_file(File.expand_path('~/.config/private.yml'))['gmail']
rescue Errno::ENOENT
  abort('Please create ~/.config/private.yml file with gmail key.')
end

username = config['username'] || abort('Add gmail.username into your ~/.config/private.yml file.')
password = config['password'] || abort('Add gmail.username into your ~/.config/private.yml file.')

# If this fails, go to https://myaccount.google.com/security?pli=1
# and Allow less secure apps: ON
Gmail.connect!(username, password) do |gmail|
  unread = gmail.inbox.emails(:unread) # Otherwise we get dups.

  if ARGV.include?('--confirmations-only')
    unread.select do |email|
      if "#{email.subject}\n#{email.body}".match(/activate/i)
        # TODO: Just the confirmation link.
        puts "#{email.subject} | href=https://mail.google.com/mail/u/0/?shva=1#inbox/#{email.uid}"
      end
    end

    exit
  end
  # p gmail.inbox.count(:unread)

  # .select do |email|
  #   # email.subject, email.body
  #   #require 'pry'; binding.pry
  # end

  newsletters = unread.select do |email|
    "#{email.subject}\n#{email.body}".match(/unsubscribe/i)
  end

  direct_emails = unread - newsletters

  unique_direct_emails = direct_emails.reduce(Array.new) do |buffer, email|
    # Re: Re: Hi, I totally love your shirts and I'd love to ge...
    unless buffer.find { |item| email.message.subject == item.message.subject }
      buffer << email
    end

    buffer
  end

  unique_direct_emails.each do |email|
    path = "/tmp/gmail.#{email.uid}"
    File.open(path, 'w') { |f| f.puts(email.text_part) }
    puts "#{email.message.subject} | bash='cat #{path}'"
  end

  unless newsletters.empty?
    puts "Newsletters (#{newsletters.length}) | color=blue"
    newsletters.each do |email|
      puts "--#{email.message.subject}"
      unsubscribe_link = 'todo' ###
      puts "----Unsubscribe | href=#{unsubscribe_link}"
    end
  end
end
