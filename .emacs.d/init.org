#+TITLE: Emacs configuration file
#+AUTHOR: Jakub Šťastný
#+BABEL: :cache yes
#+PROPERTY: header-args :tangle yes

* About

My Emacs configuration. It's trying to be as minimalist as possible, leaving environment-specific concerns to =dir-locals.el=.

* Managing this configuration

** Tangle on save

The =init.el= should (after the first run) mirror the source blocks in the =init.org=. We can use =C-c C-v t= to run =org-babel-tangle=, which extracts the code blocks from the current file into a source-specific file (in this case a =.el=-file).

To avoid doing this each time a change is made we can add a function to the =after-save-hook= ensuring to always tangle and byte-compile the =org=-document after changes.

#+BEGIN_SRC emacs-lisp
(defun tangle-init ()
  "If the current buffer is 'init.org' the code-blocks are
tangled, and the tangled file is compiled."
    (when (equal (buffer-file-name)
                 (expand-file-name (concat user-emacs-directory "init.org")))
    ;; Avoid running hooks when tangling.
    (let ((prog-mode-hook nil))
      (org-babel-tangle)
      (byte-compile-file (concat user-emacs-directory "init.el")))))

(add-hook 'after-save-hook 'tangle-init)
#+END_SRC

** Reload configuration

Use =M-x reload= to reload the configuration.

#+BEGIN_SRC emacs-lisp
(defun reload ()
  "Reloads Emacs configuration."
  (interactive)
  (load-file "~/.emacs.d/init.elc"))
#+END_SRC

* Managing packages

#+BEGIN_SRC emacs-lisp
(require 'package)

(setq package-archives
        '(("gnu" . "https://elpa.gnu.org/packages/")
          ("MELPA" . "https://melpa.org/packages/"))
      package-archive-priorities
        '(("MELPA" . 5)
          ("gnu" . 0)))
#+END_SRC

The configuration assumes that the packages listed below are
installed. To ensure we install missing packages if they are missing.

* EVIL

#+BEGIN_SRC emacs-lisp

** Custom variables

If you edit through Emacs, it will write the set custom variables
to ~/.emacs and it won't work right, there should be always only
1 custom-set-variables block.

https://linuxhint.com/emacs_themes/

#+BEGIN_SRC emacs-lisp
(custom-set-variables
 '(custom-enabled-themes '(doom-Iosvkem))
 '(custom-safe-themes
   '("990e24b406787568c592db2b853aa65ecc2dcd08146c0d22293259d400174e37" default))
 '(package-selected-packages
   '(## evil z3-mode which-key vterm use-package try smex slime racket-mode proof-general pdf-tools org-roam-server org-bullets olivetti minizinc-mode maude-mode magit lsp-java js2-mode jedi haskell-mode golden-ratio focus expand-region erlang doom-themes diff-hl define-word counsel-projectile company-coq clj-refactor auto-compile)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
 #+END_SRC
